def configure( cfg ):
	pass

def create_app( bld, name, use = [] ):
	import os
	bld.program(
		target =  '%s_v%s' % ( name, bld.env['VERSION'] ),
		source = name + '.cpp',
		includes = './ include',
		use = ' '.join( use ),
		install_path = os.path.join( bld.env[ 'PREFIX' ], 'bin' )
	)

external = [ "boost", "ZLIB", "PTHREAD", "CBLAS", "CLAPACK", "RT" ]
components = [ 'SNPSummaryComponent', 'SampleSummaryComponent', 'HaplotypeFrequencyComponent', 'RelatednessComponent', 'SNPOutputComponent' ]
base = [ 'appcontext', 'genfile', 'statfile', 'qcdb', 'metro', 'qctool-lib', 'package_revision' ]

dependencies = {
	"qctool": external + components + base,
	"hptest": external + components + base,
	"ldbird": external + components + base,
	#"multifinemap": external + components + base,
	"selfmap": external + components + base,
	"inthinnerator": external + components + base
}

def build( bld ):
	for appName in dependencies.keys():
		create_app( bld, appName, dependencies[appName] )

	

